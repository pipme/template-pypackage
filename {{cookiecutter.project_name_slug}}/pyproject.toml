[project]
name = "{{ cookiecutter.project_name }}"
description = "{{ cookiecutter.project_short_description }}."
version = "{{ cookiecutter.version }}"
requires-python = ">=3.8"
readme = "README.md"
license = { file = "LICENSE" }
{%- if cookiecutter.command_line_interface|lower == 'click' %}
dependencies = ["click"]
{%- endif %}
{%- if cookiecutter.command_line_interface|lower == 'argparse' %}
dependencies = ["argparse"]
{%- endif %}


[project.optional-dependencies]
ml = ["numpy", "pandas", "scipy", "scikit-learn", "matplotlib", "hydra-core", "tqdm"]
test = ["pytest", "pytest-cov", "pytest-sugar"]
dev = ["ruff", "black", "tox", "mypy", "pre-commit", "bump2version", "twine"]
docs = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extensions",
    "mkdocs-autorefs",
]
all = ["{{ cookiecutter.package_name }}[ml,test,dev,docs]"]

[build-system]
requires = ["setuptools >= 45", "setuptools_scm[toml] >= 6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.ruff]
extend-exclude = ["static", ".github"]
ignore = [
    "RUF001", # ruff-specific rules ambiguous-unicode-character-string
    "S101",   # flake8-bandit assert
    "S308",   # flake8-bandit suspicious-mark-safe-usage
    "E501",   # pycodestyle line-too-long
]
line-length = 79
select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "E",   # pycodestyle errors
    "EXE", # flake8-executable
    "F",   # pyflakes
    "I",   # isort
    "INT", # flake8-gettext
    "PIE", # flake8-pie
    "PLC", # pylint convention
    "PLE", # pylint errors
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
    "S",   # flake8-bandit
    "UP",  # pyupgrade
    "W",   # pycodestyle warnings
]
src = ["src", "tests"]
target-version = "py310"

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.isort]
forced-separate = ["conftest"]

[tool.black]
line-length = 79
target-version = ["py310"]

[tool.coverage.run]
parallel = true
branch = true
omit = ["docs/*", "tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover"
]
show_missing = true
